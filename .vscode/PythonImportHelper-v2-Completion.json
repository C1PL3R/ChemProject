[
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Molecule",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Molecule",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Molecule",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Molecule",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Molecule",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "sync_to_async",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "sync_to_async",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "ChatConsumer",
        "importPath": "ChemChat.consumers",
        "description": "ChemChat.consumers",
        "isExtraImport": true,
        "detail": "ChemChat.consumers",
        "documentation": {}
    },
    {
        "label": "DocumentConsumer",
        "importPath": "ChemDocument.consumers",
        "description": "ChemDocument.consumers",
        "isExtraImport": true,
        "detail": "ChemDocument.consumers",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "importPath": "ChemChat.routing",
        "description": "ChemChat.routing",
        "isExtraImport": true,
        "detail": "ChemChat.routing",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Chem",
        "importPath": "rdkit",
        "description": "rdkit",
        "isExtraImport": true,
        "detail": "rdkit",
        "documentation": {}
    },
    {
        "label": "Chem",
        "importPath": "rdkit",
        "description": "rdkit",
        "isExtraImport": true,
        "detail": "rdkit",
        "documentation": {}
    },
    {
        "label": "AllChem",
        "importPath": "rdkit.Chem",
        "description": "rdkit.Chem",
        "isExtraImport": true,
        "detail": "rdkit.Chem",
        "documentation": {}
    },
    {
        "label": "AllChem",
        "importPath": "rdkit.Chem",
        "description": "rdkit.Chem",
        "isExtraImport": true,
        "detail": "rdkit.Chem",
        "documentation": {}
    },
    {
        "label": "pubchempy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pubchempy",
        "description": "pubchempy",
        "detail": "pubchempy",
        "documentation": {}
    },
    {
        "label": "BadRequestError",
        "importPath": "pubchempy",
        "description": "pubchempy",
        "isExtraImport": true,
        "detail": "pubchempy",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "mesh",
        "importPath": "stl",
        "description": "stl",
        "isExtraImport": true,
        "detail": "stl",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "sin",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "cos",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "check_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "handler400",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "handler403",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AddContactView",
        "kind": 6,
        "importPath": "ChemProject.ChemChat.views_classes.add_contact_view",
        "description": "ChemProject.ChemChat.views_classes.add_contact_view",
        "peekOfCode": "class AddContactView(View):\n    def post(self, request):\n        current_user = request.user\n        try:\n            data = json.loads(request.body)\n        except json.JSONDecodeError:\n            return JsonResponse({'error': 'Некоректні дані'}, status=400)\n        username = data.get('username')\n        phone_number = data.get('phone_number')\n        phone = remove_formatting(phone_number)",
        "detail": "ChemProject.ChemChat.views_classes.add_contact_view",
        "documentation": {}
    },
    {
        "label": "remove_formatting",
        "kind": 2,
        "importPath": "ChemProject.ChemChat.views_classes.add_contact_view",
        "description": "ChemProject.ChemChat.views_classes.add_contact_view",
        "peekOfCode": "def remove_formatting(phone_number):\n    cleaned = re.sub(r'\\D', '', phone_number)\n    return cleaned\nclass AddContactView(View):\n    def post(self, request):\n        current_user = request.user\n        try:\n            data = json.loads(request.body)\n        except json.JSONDecodeError:\n            return JsonResponse({'error': 'Некоректні дані'}, status=400)",
        "detail": "ChemProject.ChemChat.views_classes.add_contact_view",
        "documentation": {}
    },
    {
        "label": "ChatView",
        "kind": 6,
        "importPath": "ChemProject.ChemChat.views_classes.chat_view",
        "description": "ChemProject.ChemChat.views_classes.chat_view",
        "peekOfCode": "class ChatView(View):\n    def get(self, request):\n        if request.user.is_authenticated:\n            contacts_data = get_contacts_data(request)\n            if contacts_data:\n                context = {\n                    'contacts': contacts_data,\n                    'title': 'ChemChat',\n                }\n                return render(request, 'ChemChat/chat.html', context)",
        "detail": "ChemProject.ChemChat.views_classes.chat_view",
        "documentation": {}
    },
    {
        "label": "get_contacts_data",
        "kind": 2,
        "importPath": "ChemProject.ChemChat.views_classes.chat_view",
        "description": "ChemProject.ChemChat.views_classes.chat_view",
        "peekOfCode": "def get_contacts_data(request):\n    contact_list = Contact.objects.filter(user=request.user.id)\n    if not contact_list.exists():\n        contact_list = Contact.objects.filter(contact=request.user.id)\n    contacts_data = []\n    for contact in contact_list:\n        if contact.user == request.user:\n            contact_object = contact.contact\n        else:\n            contact_object = contact.user",
        "detail": "ChemProject.ChemChat.views_classes.chat_view",
        "documentation": {}
    },
    {
        "label": "ChatWithIDView",
        "kind": 6,
        "importPath": "ChemProject.ChemChat.views_classes.chat_with_chat_id_view",
        "description": "ChemProject.ChemChat.views_classes.chat_with_chat_id_view",
        "peekOfCode": "class ChatWithIDView(View):\n    def get(self, request, chat_id):\n        contacts_data = get_contacts_data(request)\n        for contact in contacts_data:\n            if contact['chat_id'] == chat_id:\n                phone = contact['phone']\n                username = contact['username']\n                contact_id = contact['id']\n                break\n        try:",
        "detail": "ChemProject.ChemChat.views_classes.chat_with_chat_id_view",
        "documentation": {}
    },
    {
        "label": "ChemchatConfig",
        "kind": 6,
        "importPath": "ChemProject.ChemChat.apps",
        "description": "ChemProject.ChemChat.apps",
        "peekOfCode": "class ChemchatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'ChemChat'",
        "detail": "ChemProject.ChemChat.apps",
        "documentation": {}
    },
    {
        "label": "ChatConsumer",
        "kind": 6,
        "importPath": "ChemProject.ChemChat.consumers",
        "description": "ChemProject.ChemChat.consumers",
        "peekOfCode": "class ChatConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.room_name = self.scope['url_route']['kwargs']['chat_id']\n        self.room_group_name = f'chat_{self.room_name}'\n        # Приєднуємо користувача до групи\n        await self.channel_layer.group_add(\n            self.room_group_name,\n            self.channel_name\n        )\n        await self.accept()",
        "detail": "ChemProject.ChemChat.consumers",
        "documentation": {}
    },
    {
        "label": "create_message",
        "kind": 2,
        "importPath": "ChemProject.ChemChat.consumers",
        "description": "ChemProject.ChemChat.consumers",
        "peekOfCode": "def create_message(sender_id, receiver_id, message, contact_id):\n    contact = Contact.objects.get(id=str(contact_id))\n    sender_contact = Chemist.objects.filter(id=sender_id).first()\n    receiver_contact = Chemist.objects.filter(id=receiver_id).first()\n    sender_chemist = sender_contact\n    receiver_chemist = receiver_contact\n    Message.objects.create(\n        sender=sender_chemist, receiver=receiver_chemist, content=message, chat_id=contact.id)\nclass ChatConsumer(AsyncWebsocketConsumer):\n    async def connect(self):",
        "detail": "ChemProject.ChemChat.consumers",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "ChemProject.ChemChat.routing",
        "description": "ChemProject.ChemChat.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r'ws/chat/(?P<chat_id>\\w+)/$', ChatConsumer.as_asgi()),\n    re_path(r'ws/document/(?P<document_id>\\w+)/$', DocumentConsumer.as_asgi())\n]",
        "detail": "ChemProject.ChemChat.routing",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChemProject.ChemChat.urls",
        "description": "ChemProject.ChemChat.urls",
        "peekOfCode": "urlpatterns = [\n    path('', ChatView.as_view(), name='chat'),\n    path('<int:chat_id>/', ChatWithIDView.as_view(), name='chat_with_id'),\n    path('add_contact/', AddContactView.as_view(), name='add_contact'),\n]",
        "detail": "ChemProject.ChemChat.urls",
        "documentation": {}
    },
    {
        "label": "AddAllowedUserView",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.views_classes.add_allowed_user_view",
        "description": "ChemProject.ChemDocument.views_classes.add_allowed_user_view",
        "peekOfCode": "class AddAllowedUserView(View):\n    def post(self, request):\n        if request.user.is_authenticated:\n            try:\n                data = json.loads(request.body)\n                id = data.get('doc_id')\n                document = Document.objects.get(id=id)\n                if document.owner != request.user:\n                    return JsonResponse({'error': 'You are not the owner of this document.'}, status=403)\n                else:",
        "detail": "ChemProject.ChemDocument.views_classes.add_allowed_user_view",
        "documentation": {}
    },
    {
        "label": "CreateNewDocView",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.views_classes.create_new_doc_view",
        "description": "ChemProject.ChemDocument.views_classes.create_new_doc_view",
        "peekOfCode": "class CreateNewDocView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n        title = data.get(\"title\")\n        icon = data.get(\"icon\")\n        if not title:\n            title = \"Документ Без Назви\"\n        if not icon:\n            icon = \"doc-icon\"\n        curent_user = request.user",
        "detail": "ChemProject.ChemDocument.views_classes.create_new_doc_view",
        "documentation": {}
    },
    {
        "label": "DeleteDocumentView",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.views_classes.delete_document_view",
        "description": "ChemProject.ChemDocument.views_classes.delete_document_view",
        "peekOfCode": "class DeleteDocumentView(View):\n    def post(self, request):\n        if not request.user.is_authenticated:\n            return JsonResponse({'error': 'Unauthorized'}, status=401)\n        try:\n            data = json.loads(request.body)\n            doc_id = data.get(\"doc_id\")\n            if not doc_id:\n                return JsonResponse({'error': 'Missing document ID'}, status=400)\n            Document.objects.get(id=doc_id, owner=request.user).delete()",
        "detail": "ChemProject.ChemDocument.views_classes.delete_document_view",
        "documentation": {}
    },
    {
        "label": "DocumentView",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.views_classes.document_view",
        "description": "ChemProject.ChemDocument.views_classes.document_view",
        "peekOfCode": "class DocumentView(View):\n    def get(self, request):\n        if request.user.is_authenticated:\n            docs = Document.objects.filter(owner=request.user)\n            context = {\n                'docs': docs,\n                'title': 'ChemDocument',\n                'is_doc_page': True,\n                'icons_list_1': ['doc-icon', 'doc-profile-icon', 'document-2-icon', 'document-3-icon'],\n                'icons_list_2': ['docx-icon', 'file-icon', 'pdf-icon', 'to-do-icon'],",
        "detail": "ChemProject.ChemDocument.views_classes.document_view",
        "documentation": {}
    },
    {
        "label": "DocumentWithIdView",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.views_classes.document_with_id_view",
        "description": "ChemProject.ChemDocument.views_classes.document_with_id_view",
        "peekOfCode": "class DocumentWithIdView(View):\n    def get(self, request, document_id):\n        if not request.user.is_authenticated:\n            return redirect('auth')\n        document = Document.objects.filter(id=document_id).first()\n        if document.is_private:\n            if document.owner == request.user or request.user in document.allowed_users.all():\n                context = {\n                    'document_id': document_id,\n                    'title': 'ChemDocument',",
        "detail": "ChemProject.ChemDocument.views_classes.document_with_id_view",
        "documentation": {}
    },
    {
        "label": "SaveSettingsView",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.views_classes.save_settings_view",
        "description": "ChemProject.ChemDocument.views_classes.save_settings_view",
        "peekOfCode": "class SaveSettingsView(View):\n    def post(self, request):\n        if request.user.is_authenticated:\n            try:\n                data = json.loads(request.body)\n                id = data.get(\"doc_id\")\n                document = Document.objects.filter(id=id).first()\n                if document.owner != request.user:\n                    return JsonResponse({'error': 'You are not the owner of this document.'}, status=403)\n                else:",
        "detail": "ChemProject.ChemDocument.views_classes.save_settings_view",
        "documentation": {}
    },
    {
        "label": "ChemdocumentConfig",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.apps",
        "description": "ChemProject.ChemDocument.apps",
        "peekOfCode": "class ChemdocumentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'ChemDocument'",
        "detail": "ChemProject.ChemDocument.apps",
        "documentation": {}
    },
    {
        "label": "DocumentConsumer",
        "kind": 6,
        "importPath": "ChemProject.ChemDocument.consumers",
        "description": "ChemProject.ChemDocument.consumers",
        "peekOfCode": "class DocumentConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.document_name = self.scope['url_route']['kwargs']['document_id']\n        self.document_group_name = f'document_{self.document_name}'\n        # Приєднуємо користувача до групи\n        await self.channel_layer.group_add(\n            self.document_group_name,\n            self.channel_name\n        )\n        await self.accept()",
        "detail": "ChemProject.ChemDocument.consumers",
        "documentation": {}
    },
    {
        "label": "save_doc",
        "kind": 2,
        "importPath": "ChemProject.ChemDocument.consumers",
        "description": "ChemProject.ChemDocument.consumers",
        "peekOfCode": "def save_doc(text, doc_id):\n    Document.objects.filter(id=doc_id).update(text=text)\n@sync_to_async\ndef save_doc_title(title, doc_id):\n    Document.objects.filter(id=doc_id).update(title=title)\nclass DocumentConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.document_name = self.scope['url_route']['kwargs']['document_id']\n        self.document_group_name = f'document_{self.document_name}'\n        # Приєднуємо користувача до групи",
        "detail": "ChemProject.ChemDocument.consumers",
        "documentation": {}
    },
    {
        "label": "save_doc_title",
        "kind": 2,
        "importPath": "ChemProject.ChemDocument.consumers",
        "description": "ChemProject.ChemDocument.consumers",
        "peekOfCode": "def save_doc_title(title, doc_id):\n    Document.objects.filter(id=doc_id).update(title=title)\nclass DocumentConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.document_name = self.scope['url_route']['kwargs']['document_id']\n        self.document_group_name = f'document_{self.document_name}'\n        # Приєднуємо користувача до групи\n        await self.channel_layer.group_add(\n            self.document_group_name,\n            self.channel_name",
        "detail": "ChemProject.ChemDocument.consumers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChemProject.ChemDocument.urls",
        "description": "ChemProject.ChemDocument.urls",
        "peekOfCode": "urlpatterns = [\n    path('', DocumentView.as_view(), name='document'),\n    path('create-new-doc/', CreateNewDocView.as_view()),   \n    path('delete-document/', DeleteDocumentView.as_view()),\n    path('save-settings/', SaveSettingsView.as_view()),\n    path('add-allowed-user/', AddAllowedUserView.as_view()),\n    path('<str:document_id>/', DocumentWithIdView.as_view(), name='document_with_id'),\n]",
        "detail": "ChemProject.ChemDocument.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.asgi",
        "description": "ChemProject.ChemProject.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    \"http\": get_asgi_application(),\n    \"websocket\": AuthMiddlewareStack(\n        URLRouter(\n            websocket_urlpatterns\n        )\n    ),\n})",
        "detail": "ChemProject.ChemProject.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "SECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'daphne',\n    'channels',\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'daphne',\n    'channels',\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'daphne',\n    'channels',\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'daphne',\n    'channels',\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'core.middlewares.admin_ip_restrict.AdminIPRestrictionMiddleware',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "ROOT_URLCONF = 'ChemProject.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates'),],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates'),],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "WSGI_APPLICATION = 'ChemProject.wsgi.application'\nASGI_APPLICATION = 'ChemProject.asgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n        \"ATOMIC_REQUESTS\": True,\n    }",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "ASGI_APPLICATION = 'ChemProject.asgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n        \"ATOMIC_REQUESTS\": True,\n    }\n}",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n        \"ATOMIC_REQUESTS\": True,\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"127.0.0.1\", 6379)],\n        },\n    },\n}\n# Internationalization\n# https://docs.djangoproject.com/en/5.2/topics/i18n/",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "LANGUAGE_CODE = 'uk'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nAUTH_USER_MODEL = 'core.Chemist'  # або вкажи актуальний app name\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nAUTH_USER_MODEL = 'core.Chemist'  # або вкажи актуальний app name\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nAUTH_USER_MODEL = 'core.Chemist'  # або вкажи актуальний app name\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nAUTH_USER_MODEL = 'core.Chemist'  # або вкажи актуальний app name\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nAUTH_USER_MODEL = 'core.Chemist'  # або вкажи актуальний app name\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'core.Chemist'  # або вкажи актуальний app name\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.settings",
        "description": "ChemProject.ChemProject.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ChemProject.ChemProject.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.urls",
        "description": "ChemProject.ChemProject.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('core.urls')),\n]",
        "detail": "ChemProject.ChemProject.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ChemProject.ChemProject.wsgi",
        "description": "ChemProject.ChemProject.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "ChemProject.ChemProject.wsgi",
        "documentation": {}
    },
    {
        "label": "ConvertView",
        "kind": 6,
        "importPath": "ChemProject.ChemVisualizer.views_classes.converter_view",
        "description": "ChemProject.ChemVisualizer.views_classes.converter_view",
        "peekOfCode": "class ConvertView(View):\n    def get(self, request):\n        return render(request, 'ChemVisualizer/converter.html', {'title': 'ChemVisualizer'})\n    def post(self, request):\n        sdf_file = request.FILES.get(\"sdf_file\")\n        if not sdf_file:\n            return HttpResponse(\"❌ Файл не надано.\", status=400)\n        try:\n            sdf_data = sdf_file.read().decode(\"utf-8\")\n            stl_data = convert_sdf_to_stl_bytes(sdf_data)",
        "detail": "ChemProject.ChemVisualizer.views_classes.converter_view",
        "documentation": {}
    },
    {
        "label": "convert_sdf_to_stl_bytes",
        "kind": 2,
        "importPath": "ChemProject.ChemVisualizer.views_classes.converter_view",
        "description": "ChemProject.ChemVisualizer.views_classes.converter_view",
        "peekOfCode": "def convert_sdf_to_stl_bytes(sdf_data: str) -> bytes:\n    mol = Chem.MolFromMolBlock(sdf_data, removeHs=False)\n    if mol is None:\n        raise ValueError(\"Не вдалося зчитати файл SDF\")\n    if not mol.GetConformer().Is3D():\n        AllChem.EmbedMolecule(mol)\n        AllChem.UFFOptimizeMolecule(mol)\n    conf = mol.GetConformer()\n    all_vertices = []\n    all_triangles = []",
        "detail": "ChemProject.ChemVisualizer.views_classes.converter_view",
        "documentation": {}
    },
    {
        "label": "MoleculeView",
        "kind": 6,
        "importPath": "ChemProject.ChemVisualizer.views_classes.molecule_view",
        "description": "ChemProject.ChemVisualizer.views_classes.molecule_view",
        "peekOfCode": "class MoleculeView(View):\n    def get(self, request):\n        name = request.COOKIES.get('moleculeName')\n        smiles = request.COOKIES.get('moleculeSmiles')\n        results = pcp.get_compounds(name, 'name')\n        if results:\n            compound = results[0]\n            smiles = compound.isomeric_smiles\n            molecular_formula = compound.molecular_formula\n            molecular_weight = compound.molecular_weight",
        "detail": "ChemProject.ChemVisualizer.views_classes.molecule_view",
        "documentation": {}
    },
    {
        "label": "VisualizeFileView",
        "kind": 6,
        "importPath": "ChemProject.ChemVisualizer.views_classes.visualize_file_view",
        "description": "ChemProject.ChemVisualizer.views_classes.visualize_file_view",
        "peekOfCode": "class VisualizeFileView(View):\n    def get(self, request):\n        sdf_data = request.session.pop('sdf_data', None)\n        return render(request, 'ChemVisualizer/visualize.html', {'sdf_data': sdf_data, 'title': 'ChemVisualizer'})\n    def post(self, request):\n        sdf_file = request.FILES['sdf_file']\n        sdf_data = sdf_file.read().decode('utf-8')\n        request.session['sdf_data'] = sdf_data\n        return redirect('visualize_file')",
        "detail": "ChemProject.ChemVisualizer.views_classes.visualize_file_view",
        "documentation": {}
    },
    {
        "label": "ChemvisualizerConfig",
        "kind": 6,
        "importPath": "ChemProject.ChemVisualizer.apps",
        "description": "ChemProject.ChemVisualizer.apps",
        "peekOfCode": "class ChemvisualizerConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'ChemVisualizer'",
        "detail": "ChemProject.ChemVisualizer.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChemProject.ChemVisualizer.urls",
        "description": "ChemProject.ChemVisualizer.urls",
        "peekOfCode": "urlpatterns = [\n    path('', MoleculeView.as_view(), name='view_molecule'),\n    path('converter/', ConvertView.as_view(), name='converter'),\n    path('visualize_file/', VisualizeFileView.as_view(), name='visualize_file'),\n]",
        "detail": "ChemProject.ChemVisualizer.urls",
        "documentation": {}
    },
    {
        "label": "view_molecule",
        "kind": 2,
        "importPath": "ChemProject.ChemVisualizer.views",
        "description": "ChemProject.ChemVisualizer.views",
        "peekOfCode": "def view_molecule(request):\n    return render(request, 'ChemVisualizer/view_molecule.html')\ndef visualize_file(request):\n    return render(request, 'ChemVisualizer/visualize_file.html')",
        "detail": "ChemProject.ChemVisualizer.views",
        "documentation": {}
    },
    {
        "label": "visualize_file",
        "kind": 2,
        "importPath": "ChemProject.ChemVisualizer.views",
        "description": "ChemProject.ChemVisualizer.views",
        "peekOfCode": "def visualize_file(request):\n    return render(request, 'ChemVisualizer/visualize_file.html')",
        "detail": "ChemProject.ChemVisualizer.views",
        "documentation": {}
    },
    {
        "label": "AdminIPRestrictionMiddleware",
        "kind": 6,
        "importPath": "ChemProject.core.middlewares.admin_ip_restrict",
        "description": "ChemProject.core.middlewares.admin_ip_restrict",
        "peekOfCode": "class AdminIPRestrictionMiddleware:\n    def __init__(self, get_response):\n        dotenv_path = r\"D:\\Vitaliy\\Документи\\Коди\\GitHub\\ChemProject\\ChemProject\\.env\"\n        load_dotenv(dotenv_path)\n        raw_ips = os.getenv('MY_IP', '')\n        self.ALLOWED_IPS = [ip.strip() for ip in raw_ips.split(',') if ip.strip()]\n        self.get_response = get_response\n    def __call__(self, request):\n        if request.path.startswith('/admin/'):\n            print(f\"[middleware] ALLOWED_IPS: {self.ALLOWED_IPS}\")",
        "detail": "ChemProject.core.middlewares.admin_ip_restrict",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0001_initial",
        "description": "ChemProject.core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Molecule',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "ChemProject.core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0002_message_chat_id",
        "description": "ChemProject.core.migrations.0002_message_chat_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='message',\n            name='chat_id',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "ChemProject.core.migrations.0002_message_chat_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0003_document",
        "description": "ChemProject.core.migrations.0003_document",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0002_message_chat_id'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Document',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255)),",
        "detail": "ChemProject.core.migrations.0003_document",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0004_document_icon_alter_document_title",
        "description": "ChemProject.core.migrations.0004_document_icon_alter_document_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0003_document'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='document',\n            name='icon',\n            field=models.TextField(null=True),\n        ),",
        "detail": "ChemProject.core.migrations.0004_document_icon_alter_document_title",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0005_alter_document_icon",
        "description": "ChemProject.core.migrations.0005_alter_document_icon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0004_document_icon_alter_document_title'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='icon',\n            field=models.CharField(max_length=20, null=True),\n        ),",
        "detail": "ChemProject.core.migrations.0005_alter_document_icon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0006_alter_document_icon",
        "description": "ChemProject.core.migrations.0006_alter_document_icon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0005_alter_document_icon'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='icon',\n            field=models.CharField(default='doc-icon', max_length=20),\n        ),",
        "detail": "ChemProject.core.migrations.0006_alter_document_icon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0007_document_allowed_users_document_is_private",
        "description": "ChemProject.core.migrations.0007_document_allowed_users_document_is_private",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0006_alter_document_icon'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='document',\n            name='allowed_users',\n            field=models.ManyToManyField(null=True, related_name='allowed_users', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "ChemProject.core.migrations.0007_document_allowed_users_document_is_private",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0008_alter_document_allowed_users",
        "description": "ChemProject.core.migrations.0008_alter_document_allowed_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0007_document_allowed_users_document_is_private'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='allowed_users',\n            field=models.ManyToManyField(related_name='allowed_users', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "ChemProject.core.migrations.0008_alter_document_allowed_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0009_document_is_show",
        "description": "ChemProject.core.migrations.0009_document_is_show",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0008_alter_document_allowed_users'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='document',\n            name='is_show',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "ChemProject.core.migrations.0009_document_is_show",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0010_alter_document_allowed_users",
        "description": "ChemProject.core.migrations.0010_alter_document_allowed_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0009_document_is_show'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='allowed_users',\n            field=models.ManyToManyField(blank=True, related_name='allowed_users', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "ChemProject.core.migrations.0010_alter_document_allowed_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0011_remove_document_creator_document_owner",
        "description": "ChemProject.core.migrations.0011_remove_document_creator_document_owner",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0010_alter_document_allowed_users'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='document',\n            name='creator',\n        ),\n        migrations.AddField(",
        "detail": "ChemProject.core.migrations.0011_remove_document_creator_document_owner",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0012_alter_document_allowed_users",
        "description": "ChemProject.core.migrations.0012_alter_document_allowed_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0011_remove_document_creator_document_owner'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='allowed_users',\n            field=models.ManyToManyField(related_name='documents_with_access', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "ChemProject.core.migrations.0012_alter_document_allowed_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0013_alter_document_allowed_users",
        "description": "ChemProject.core.migrations.0013_alter_document_allowed_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0012_alter_document_allowed_users'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='allowed_users',\n            field=models.ManyToManyField(blank=True, related_name='allowed_users', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "ChemProject.core.migrations.0013_alter_document_allowed_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0014_alter_document_allowed_users",
        "description": "ChemProject.core.migrations.0014_alter_document_allowed_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0013_alter_document_allowed_users'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='allowed_users',\n            field=models.ManyToManyField(blank=True, related_name='accessible_documents', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "ChemProject.core.migrations.0014_alter_document_allowed_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ChemProject.core.migrations.0015_alter_document_is_private",
        "description": "ChemProject.core.migrations.0015_alter_document_is_private",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0014_alter_document_allowed_users'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='is_private',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "ChemProject.core.migrations.0015_alter_document_is_private",
        "documentation": {}
    },
    {
        "label": "Chemist",
        "kind": 6,
        "importPath": "ChemProject.core.models.chemist",
        "description": "ChemProject.core.models.chemist",
        "peekOfCode": "class Chemist(AbstractUser):\n    email = models.EmailField(unique=True)\n    phone = models.CharField(max_length=15, unique=True)\n    profile_picture = models.ImageField(upload_to='profile_pictures/', blank=True, null=True)\n    is_verified = models.BooleanField(default=False)\n    is_blocked = models.BooleanField(default=False)\n    is_online = models.BooleanField(default=False)\n    def __str__(self):\n        return self.username",
        "detail": "ChemProject.core.models.chemist",
        "documentation": {}
    },
    {
        "label": "Contact",
        "kind": 6,
        "importPath": "ChemProject.core.models.contact",
        "description": "ChemProject.core.models.contact",
        "peekOfCode": "class Contact(models.Model):\n    user = models.ForeignKey(Chemist, on_delete=models.CASCADE, related_name='user_contacts')\n    contact = models.ForeignKey(Chemist, on_delete=models.CASCADE, related_name='contact_users')\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        unique_together = ('user', 'contact')      \n    def __str__(self):\n        return f\"{self.user.username} - {self.contact.username}\"",
        "detail": "ChemProject.core.models.contact",
        "documentation": {}
    },
    {
        "label": "Document",
        "kind": 6,
        "importPath": "ChemProject.core.models.document",
        "description": "ChemProject.core.models.document",
        "peekOfCode": "class Document(models.Model):\n    title = models.CharField(max_length=80)\n    text = models.TextField()\n    owner = models.ForeignKey('Chemist', on_delete=models.CASCADE, related_name='owner', null=True)\n    icon = models.CharField(max_length=20, default='doc-icon')\n    date = models.DateTimeField(auto_now_add=True)\n    allowed_users = models.ManyToManyField(Chemist, blank=True, related_name='accessible_documents')\n    is_private = models.BooleanField(default=True)\n    is_show = models.BooleanField(default=True)\n    def __str__(self):",
        "detail": "ChemProject.core.models.document",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "ChemProject.core.models.message",
        "description": "ChemProject.core.models.message",
        "peekOfCode": "class Message(models.Model):\n    sender = models.ForeignKey('Chemist', on_delete=models.CASCADE, related_name='sent_messages')\n    receiver = models.ForeignKey('Chemist', on_delete=models.CASCADE, related_name='received_messages')\n    content = models.TextField()\n    chat_id = models.CharField(max_length=255, null=True)\n    timestamp = models.DateTimeField(auto_now_add=True)\n    is_read = models.BooleanField(default=False)\n    def __str__(self):\n        short_content = self.content[:15].rsplit(\" \", 1)[0]\n        return f\"Sender: {self.sender.username} Receiver: {self.receiver.username} Content: {short_content}\"",
        "detail": "ChemProject.core.models.message",
        "documentation": {}
    },
    {
        "label": "Molecule",
        "kind": 6,
        "importPath": "ChemProject.core.models.molecule",
        "description": "ChemProject.core.models.molecule",
        "peekOfCode": "class Molecule(models.Model):\n    name = models.CharField(max_length=100)\n    formula = models.CharField(max_length=50)\n    smiles = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.name",
        "detail": "ChemProject.core.models.molecule",
        "documentation": {}
    },
    {
        "label": "format_formula",
        "kind": 2,
        "importPath": "ChemProject.core.templatetags.custom_filters",
        "description": "ChemProject.core.templatetags.custom_filters",
        "peekOfCode": "def format_formula(formula):\n    \"\"\"\n    Перетворює C6H12O6 → C<sub>6</sub>H<sub>12</sub>O<sub>6</sub>\n    \"\"\"\n    if not isinstance(formula, str):\n        return formula\n    formatted = re.sub(r'(\\d+)', r'<sub>\\1</sub>', formula)\n    return mark_safe(formatted)",
        "detail": "ChemProject.core.templatetags.custom_filters",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "ChemProject.core.templatetags.custom_filters",
        "description": "ChemProject.core.templatetags.custom_filters",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef format_formula(formula):\n    \"\"\"\n    Перетворює C6H12O6 → C<sub>6</sub>H<sub>12</sub>O<sub>6</sub>\n    \"\"\"\n    if not isinstance(formula, str):\n        return formula\n    formatted = re.sub(r'(\\d+)', r'<sub>\\1</sub>', formula)\n    return mark_safe(formatted)",
        "detail": "ChemProject.core.templatetags.custom_filters",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "kind": 6,
        "importPath": "ChemProject.core.views_classes.auth_view",
        "description": "ChemProject.core.views_classes.auth_view",
        "peekOfCode": "class AuthView(View):\n    def get(self, request):\n        return render(request, 'auth.html')\nclass AuthPostView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n        username = data.get('username')\n        password = data.get('password')\n        email = data.get('email')\n        first_name = data.get('first_name')",
        "detail": "ChemProject.core.views_classes.auth_view",
        "documentation": {}
    },
    {
        "label": "AuthPostView",
        "kind": 6,
        "importPath": "ChemProject.core.views_classes.auth_view",
        "description": "ChemProject.core.views_classes.auth_view",
        "peekOfCode": "class AuthPostView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n        username = data.get('username')\n        password = data.get('password')\n        email = data.get('email')\n        first_name = data.get('first_name')\n        last_name = data.get('last_name')\n        phone_number = data.get('phone')\n        phone = remove_formatting(phone_number)",
        "detail": "ChemProject.core.views_classes.auth_view",
        "documentation": {}
    },
    {
        "label": "remove_formatting",
        "kind": 2,
        "importPath": "ChemProject.core.views_classes.auth_view",
        "description": "ChemProject.core.views_classes.auth_view",
        "peekOfCode": "def remove_formatting(phone_number):\n    cleaned = re.sub(r'\\D', '', phone_number)\n    return cleaned\nclass AuthView(View):\n    def get(self, request):\n        return render(request, 'auth.html')\nclass AuthPostView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n        username = data.get('username')",
        "detail": "ChemProject.core.views_classes.auth_view",
        "documentation": {}
    },
    {
        "label": "SendNameView",
        "kind": 6,
        "importPath": "ChemProject.core.views_classes.send_molecule_data_views",
        "description": "ChemProject.core.views_classes.send_molecule_data_views",
        "peekOfCode": "class SendNameView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n        name = data.get('name')\n        results = pcp.get_compounds(name, 'name')\n        if results:\n            compound = results[0]\n            smiles = compound.isomeric_smiles\n            return JsonResponse({'status': 'success', 'name': name, 'smiles': smiles}, status=200)\n        else:",
        "detail": "ChemProject.core.views_classes.send_molecule_data_views",
        "documentation": {}
    },
    {
        "label": "SendFormulaView",
        "kind": 6,
        "importPath": "ChemProject.core.views_classes.send_molecule_data_views",
        "description": "ChemProject.core.views_classes.send_molecule_data_views",
        "peekOfCode": "class SendFormulaView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n        formula = data.get('formula')\n        results = pcp.get_compounds(formula, namespace='formula')\n        try:\n            if results:\n                compound = results[0]\n                smiles = compound.isomeric_smiles\n                name = compound.synonyms[0]",
        "detail": "ChemProject.core.views_classes.send_molecule_data_views",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "ChemProject.core.apps",
        "description": "ChemProject.core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core'",
        "detail": "ChemProject.core.apps",
        "documentation": {}
    },
    {
        "label": "MoleculeSerializer",
        "kind": 6,
        "importPath": "ChemProject.core.serializer",
        "description": "ChemProject.core.serializer",
        "peekOfCode": "class MoleculeSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Molecule\n        fields = [\"id\", \"name\", \"formula\", \"created_at\"]\n        read_only_fields = [\"id\"]",
        "detail": "ChemProject.core.serializer",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "ChemProject.core.urls",
        "description": "ChemProject.core.urls",
        "peekOfCode": "handler404 = 'your_project.views.custom_page_not_found'\nhandler500 = 'your_project.views.custom_error_view'\nrouter = routers.DefaultRouter()\nrouter.register(r'molecule-history', MoluculeAPIView, basename='molecule-history')\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('google45b8458dd0908687.html', views.copyright_for_google),\n    path('auth/', views.auth, name='auth'),\n    path('my-ip/', views.my_ip_view),\n    path('about/', views.about, name='about'),",
        "detail": "ChemProject.core.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 5,
        "importPath": "ChemProject.core.urls",
        "description": "ChemProject.core.urls",
        "peekOfCode": "handler500 = 'your_project.views.custom_error_view'\nrouter = routers.DefaultRouter()\nrouter.register(r'molecule-history', MoluculeAPIView, basename='molecule-history')\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('google45b8458dd0908687.html', views.copyright_for_google),\n    path('auth/', views.auth, name='auth'),\n    path('my-ip/', views.my_ip_view),\n    path('about/', views.about, name='about'),\n    path('what_are_smiles/', views.what_are_smiles, name=\"what_are_smiles\"),",
        "detail": "ChemProject.core.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "ChemProject.core.urls",
        "description": "ChemProject.core.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'molecule-history', MoluculeAPIView, basename='molecule-history')\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('google45b8458dd0908687.html', views.copyright_for_google),\n    path('auth/', views.auth, name='auth'),\n    path('my-ip/', views.my_ip_view),\n    path('about/', views.about, name='about'),\n    path('what_are_smiles/', views.what_are_smiles, name=\"what_are_smiles\"),\n    path('logout/', views.logout, name='logout'),",
        "detail": "ChemProject.core.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChemProject.core.urls",
        "description": "ChemProject.core.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('google45b8458dd0908687.html', views.copyright_for_google),\n    path('auth/', views.auth, name='auth'),\n    path('my-ip/', views.my_ip_view),\n    path('about/', views.about, name='about'),\n    path('what_are_smiles/', views.what_are_smiles, name=\"what_are_smiles\"),\n    path('logout/', views.logout, name='logout'),\n    path('auth/', AuthView.as_view(), name='auth'),\n    path('auth-post/', AuthPostView.as_view()),",
        "detail": "ChemProject.core.urls",
        "documentation": {}
    },
    {
        "label": "MoluculeAPIView",
        "kind": 6,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "class MoluculeAPIView(viewsets.ReadOnlyModelViewSet):\n    queryset = Molecule.objects.all()\n    serializer_class = MoleculeSerializer",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def index(request):\n    molucules = Molecule.objects.all()\n    return render(request, 'index.html', {'molecules_history': molucules, 'title': 'ChemProject'})\ndef auth(request):\n    if request.user.is_authenticated:\n        return render(request, 'auth.html', {'title': 'ChemProject'})\n    else:\n        return render(request, 'auth.html', {'no_auth': True, 'title': 'ChemProject'})\ndef about(request):\n    return render(request, 'about.html', {'title': 'ChemProject'})",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "auth",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def auth(request):\n    if request.user.is_authenticated:\n        return render(request, 'auth.html', {'title': 'ChemProject'})\n    else:\n        return render(request, 'auth.html', {'no_auth': True, 'title': 'ChemProject'})\ndef about(request):\n    return render(request, 'about.html', {'title': 'ChemProject'})\ndef what_are_smiles(request):\n    return render(request, 'what_are_smiles.html', {'title': 'ChemProject'})\ndef logout(request):",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def about(request):\n    return render(request, 'about.html', {'title': 'ChemProject'})\ndef what_are_smiles(request):\n    return render(request, 'what_are_smiles.html', {'title': 'ChemProject'})\ndef logout(request):\n    django_logout(request)\n    return redirect('auth')\ndef copyright_for_google(request):\n    return render(request, 'google45b8458dd0908687.html')\ndef my_ip_view(request):",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "what_are_smiles",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def what_are_smiles(request):\n    return render(request, 'what_are_smiles.html', {'title': 'ChemProject'})\ndef logout(request):\n    django_logout(request)\n    return redirect('auth')\ndef copyright_for_google(request):\n    return render(request, 'google45b8458dd0908687.html')\ndef my_ip_view(request):\n    ip = request.META.get('HTTP_X_FORWARDED_FOR') or request.META.get('REMOTE_ADDR')\n    return HttpResponse(f\"Your IP is: {ip}\")",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "logout",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def logout(request):\n    django_logout(request)\n    return redirect('auth')\ndef copyright_for_google(request):\n    return render(request, 'google45b8458dd0908687.html')\ndef my_ip_view(request):\n    ip = request.META.get('HTTP_X_FORWARDED_FOR') or request.META.get('REMOTE_ADDR')\n    return HttpResponse(f\"Your IP is: {ip}\")\nclass MoluculeAPIView(viewsets.ReadOnlyModelViewSet):\n    queryset = Molecule.objects.all()",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "copyright_for_google",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def copyright_for_google(request):\n    return render(request, 'google45b8458dd0908687.html')\ndef my_ip_view(request):\n    ip = request.META.get('HTTP_X_FORWARDED_FOR') or request.META.get('REMOTE_ADDR')\n    return HttpResponse(f\"Your IP is: {ip}\")\nclass MoluculeAPIView(viewsets.ReadOnlyModelViewSet):\n    queryset = Molecule.objects.all()\n    serializer_class = MoleculeSerializer",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "my_ip_view",
        "kind": 2,
        "importPath": "ChemProject.core.views",
        "description": "ChemProject.core.views",
        "peekOfCode": "def my_ip_view(request):\n    ip = request.META.get('HTTP_X_FORWARDED_FOR') or request.META.get('REMOTE_ADDR')\n    return HttpResponse(f\"Your IP is: {ip}\")\nclass MoluculeAPIView(viewsets.ReadOnlyModelViewSet):\n    queryset = Molecule.objects.all()\n    serializer_class = MoleculeSerializer",
        "detail": "ChemProject.core.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "ChemProject.manage",
        "description": "ChemProject.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ChemProject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "ChemProject.manage",
        "documentation": {}
    },
    {
        "label": "dotenv_path",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "dotenv_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), '.env')\nload_dotenv(dotenv_path)\nprint(f\"{os.getenv('MY_IP', '')}\")",
        "detail": "test",
        "documentation": {}
    }
]